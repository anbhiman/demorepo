install docker

sudo yum -y update
sudo yum install -y docker
docker
docker --version

Or 

sudo apt-get remove docker docker-engine docker.io
sudo apt-get update
sudo apt install docker.io
docker -v
sudo chmod 666 /var/run/docker.sock

docker login
------------------------
Docker Images

docker images
docker pull centos:latest
docker pull ubuntu:latest
docker pull nginx:latest

docker run -it ubuntu /bin/bash
exit
docker exec -it containerid /bin/bash

docker tag imagid anbhiman/ddemo:v1
docker push anbhiman/ddemo:v1
docker rmi imageid
histroy
----------------

docker ps
docker ps -a
docker run ImageName
docker start ContainerName/ID
docker stop ContainerName/ID
docker rm ContainerName/ID
--------------------------------------------------------
Conver container into docker images and push to dockerhub:

docker container ls

docker container commit ba9649bf5405 anjandevops120/mydockerrepoimages:newversion

docker push anjandevops120/mydockerrepoimages:newversion

-----

Volumes-

1)docker volume  

docker volume create myvol1
docker volume ls
docker volume inspect myvol1
docker volume rm myvolumm1
docker volume prune 

docker run -it --name=example2 -v v1:/v1 ubuntu:latest    - Run a container with a volume stop immediatly 
docker run -itd --name ubuntutest1 -v v1:/v1 ubuntu:latest - Run a continer with a volume in run mode

docker run -it --name=example1 --mount source=v1,destination=/v1 ubuntu
docker run -it --name=example2 --mount source=v1,destination=/v1 ubuntu

2)Mounting a Host Directory as a Data volume

mkdir tmp
touch file.txt
docker run -it -v "$(pwd)":/data1 ubuntu
cd data1

-----------------------------------------------
docker compose -Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your applicationâ€™s services. Then, with a single command, you create and start all the services from your configuration.

sudo apt install docker-compose
docker-compose -v
mkdir mydockercompose
cd mydockercompose
touch docker-compose.yml

version: '3.4'
services:
  database:
    image: redis
  web:
    image: nginx
    ports:
    - 9090:80

docker-compose config
docker-compose up -d
docker-compose down

sudo apt install lynx
lynx localhost:9090

docker-compose up -d --scale database=4

if any error install docker compose agin

sudo apt install docker.io docker-compose

------------------------------------------------
docker logs

docker logs CONTAINERid
docker logs 6cc871763df1 --details

Docker Logs Location -
/var/lib/docker/containers/<container_id>/<container_id>-json.log
--------------------------------------------------------------------------------
Today we will learn :

1. What is Dockerfile
2. How to create Dockerfile
3. How to build image from Dockerfile
4. Basic Commands

TIPS & TRICKS

Dockerfile : 
A text file with instructions to build image
Automation of Docker Image Creation

FROM
RUN
CMD

Step 1 : Create a file named Dockerfile

Step 2 : Add instructions in Dockerfile

Step 3 : Build dockerfile to create image

Step 4 : Run image to create container

COMMANDS:-

mkdir Dockerfiles
cd Dockerfiles
touch Dockerfiles
vi Dockerfile
________________________________________________

FROM ubuntu

MAINTAINER anjana reddy <anjanadevops@gmail.com>

RUN apt-get update

CMD ["echo","hello world"]
_____________________________________________
: docker build 
: docker build -t myimage1:1.0 directoryOfDocekrfile

: docker run imageid

Refernce site:- https://github.com/wsargent/docker-cheat-sheet#exposing-ports
---------------------------------------------------------------------

Docker Netwroking

1)Bridge n/w
  
   docker run ubuntu
   
   docker inspect containerid

2)Host n/w

   docker run --network=host ubuntu
3)None

   docker run --network=None ubuntu
